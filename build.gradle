buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.0'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'org.za'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

apply plugin: 'com.palantir.docker'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/nexus/' }
    mavenCentral()
}

dependencies {
//    springboot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

//    mysql
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
//    mybatis
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.7'
    implementation group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.6'
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.2.0'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.4.0'
//    page helper
    implementation group: 'com.github.pagehelper', name: 'pagehelper', version: '5.2.0'
    implementation group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.3.0'
//    mongoDB
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.5.1'
//    implementation group: 'org.springframework.data', name: 'spring-data-mongodb', version: '3.2.1'


//    shiro
    implementation group: 'org.apache.shiro', name: 'shiro-core', version: '1.7.1'
    implementation group: 'org.apache.shiro', name: 'shiro-spring', version: '1.7.1'
//    lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//    hutool
    implementation group: 'cn.hutool', name: 'hutool-all', version: '5.7.0'
//    JSR303
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
}

test {
    useJUnitPlatform()
}

docker {
//    dependsOn build
    name "${group}/${bootJar.archiveBaseName}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName}"])
//    定义供Dockerfile使用的变量 JAR_FILE
}
